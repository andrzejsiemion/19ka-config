[{"apiVersion":"influxdata.com/v2alpha1","kind":"Dashboard","metadata":{"name":"stoic-zhukovsky-97c001"},"spec":{"charts":[{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"3kwkXFY7mOrI2j8jZoOP4","name":"Delorean","type":"scale","hex":"#FD7A5D"},{"id":"hfyqpbcHdXLQejZ0CtCRn","name":"Delorean","type":"scale","hex":"#5F1CF2"},{"id":"J2_oVZm6RGOcGY-5IHEw6","name":"Delorean","type":"scale","hex":"#4CE09A"}],"geom":"line","height":4,"heightRatio":0.35,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Temperature","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"from(bucket: \"sensor_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"temperature_humidity\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"sensor_id\"] == \"external_sensor\" or r[\"sensor_id\"] == \"internal_sensor\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"}],"show":true,"staticLegend":{"colorizeRows":true,"heightRatio":0.35,"show":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":11,"widthRatio":1,"xCol":"_time","yCol":"_value"},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"1W4Hy0bp0AaDW_CiihrOx","name":"Delorean","type":"scale","hex":"#FD7A5D"},{"id":"81cX85dbDTahZ50o1CrC7","name":"Delorean","type":"scale","hex":"#5F1CF2"},{"id":"pfnXuq_Jxvqm_tkbKwFC8","name":"Delorean","type":"scale","hex":"#4CE09A"}],"geom":"line","height":4,"heightRatio":0.35,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Humidity","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"from(bucket: \"sensor_data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"temperature_humidity\")\n  |> filter(fn: (r) => r[\"_field\"] == \"humidity\")\n  |> filter(fn: (r) => r[\"sensor_id\"] == \"external_sensor\" or r[\"sensor_id\"] == \"internal_sensor\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"}],"show":true,"staticLegend":{"colorizeRows":true,"heightRatio":0.35,"show":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":11,"widthRatio":1,"xCol":"_time","yCol":"_value","yPos":4}],"name":"19ka"}}]